version: '3'

services:
  postgres:
    mem_limit: 100m
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${DATABASE_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - beeshortener

  backend:
    mem_limit: 100m
    build:
      context: ./backend
      dockerfile: src/main/docker/Dockerfile.legacy-jar
    env_file: .env
    depends_on:
      - postgres
    networks:
      - beeshortener

  frontend:
    mem_limit: 100m
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
    env_file: .env
    networks:
      - beeshortener

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - postgres
      - backend
      - frontend
    networks:
      - beeshortener

volumes:
  pgdata:

networks:
  beeshortener:
    driver: bridge